{"ast":null,"code":"import _slicedToArray from \"/Users/benjamindoyle/Documents/git/lambda/FrontEnd1/atoz/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/benjamindoyle/Documents/git/lambda/FrontEnd1/atoz/src/components/Home/ExperienceListHome.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ExperienceCard from \"./ExperienceCard\"; // set experience as all on page load and then when user selects, set state and make dynamic\n\nfunction ExperienceListHome() {\n  // const [experiences, setExperiences] = useState([{\n  //     date: \"\",\n  //     description: \"\",\n  //     id: 1,\n  //     location: \"\",\n  //     price: \"\",\n  //     title: \"\",\n  //     user_id: 1\n  // }])\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        experiences = _useState2[0],\n        setExperiences = _useState2[1]; // const [type, setType] = useState('')\n\n\n  const getData = () => {\n    axios.get(\"https://atoz-backend.herokuapp.com/api/experiences\").then(r => {\n      setExperiences([r.data.experiences]);\n    }).catch(e => console.log('Axois Experience GET Error:', e));\n  };\n\n  useEffect(getData, []);\n\n  const list = function () {\n    experiences.map(e => e);\n  };\n\n  if (experiences.length >= 1) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/adventures\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/food-tours\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/cooking\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/surfing\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/concerts\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }), React.createElement(Route, {\n      exact: true,\n      path: \"/socail-impact\",\n      render: props => React.createElement(ExperienceCard, Object.assign({}, props, {\n        ex: experiences.map(e => e),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      })),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, \"There are no experiences in your area yet!\"));\n  }\n}\n\nexport default ExperienceListHome;","map":{"version":3,"sources":["/Users/benjamindoyle/Documents/git/lambda/FrontEnd1/atoz/src/components/Home/ExperienceListHome.js"],"names":["React","useState","useEffect","Route","axios","ExperienceCard","ExperienceListHome","experiences","setExperiences","getData","get","then","r","data","catch","e","console","log","list","map","length","props"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Route } from \"react-router-dom\";\nimport axios from \"axios\";\nimport ExperienceCard from \"./ExperienceCard\";\n\n// set experience as all on page load and then when user selects, set state and make dynamic\n\nfunction ExperienceListHome() {\n\n    // const [experiences, setExperiences] = useState([{\n    //     date: \"\",\n    //     description: \"\",\n    //     id: 1,\n    //     location: \"\",\n    //     price: \"\",\n    //     title: \"\",\n    //     user_id: 1\n    // }])\n    const [experiences, setExperiences] = useState([])\n    // const [type, setType] = useState('')\n    \n    const getData = () => {\n\n        axios\n        .get(`https://atoz-backend.herokuapp.com/api/experiences`)\n        .then(r => {\n            setExperiences([r.data.experiences])\n        })\n        .catch( e => console.log('Axois Experience GET Error:', e))\n    \n    };\n\n    useEffect(getData, [])\n\n    const list = function() {\n        experiences.map(e => e);\n    }\n\n    if (experiences.length >= 1) {\n        return (\n            <div>\n                <Route \n                    exact path=\"/\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/adventures\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/food-tours\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/cooking\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/surfing\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/concerts\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n                <Route \n                    exact path=\"/socail-impact\" \n                    render={props => <ExperienceCard {...props} ex={experiences.map(e => e)} />}\n                />\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n                <div>\n                    There are no experiences in your area yet!\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default ExperienceListHome;"]},"metadata":{},"sourceType":"module"}